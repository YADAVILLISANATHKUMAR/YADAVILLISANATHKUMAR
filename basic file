links
=========
https://docs.google.com/spreadsheets/d/1ZvagvrQdcEHRN1bzEjaWDXnem-C38WaNqsHUCMo3zsQ/htmlview?usp=sharing&pru=AAABg3QKI9U*Y23bQuGLkp8Xn93rwj_RHA
https://www.pavantestingtools.com/p/blog-page.html
https://docs.google.com/spreadsheets/u/1/d/1ZvagvrQdcEHRN1bzEjaWDXnem-C38WaNqsHUCMo3zsQ/htmlview?usp=sharing&pru=AAABg3QIdBs*I9zqaOjXhwL3ertojLYlIA
https://colab.research.google.com/drive/1enM8CCFDUy2Tp3W4q24DLilHOtVe7i_e?usp=sharing#scrollTo=HmL2D6nqShhW

def equals(a,b,c):
    if(a==b and b==c):
        return 3
    elif (a==b or a==c):
        return 2
    else:
        return 0
print(equals(3,4,3))
print(equals(1,1,1))
print(equals(3,4,1))
print(equals(1,1,2))


https://git-scm.com/download/win






def primenum(number):
    if number > 1:
       # check for factors
       for i in range(2,number):
           if (number % i) == 0:
                break
       else:
           #print(num,"is a prime number")
           if(number not in a):
            a.append(number)
     
   

s='23167'
a=[]
d=[]
c=''
b=0
for i in range(0,len(s)):
    #print(s[i])
    primenum(int(s[i]))
    c=c+s[i]
    for  j in range(i+1,len(s)):
           # primenum(int(s[j]))
            c=c+s[j]
            if(int(c) <=999): 
                b=int(c)
                b1 =b
                l1=[1,10,100]
                sums=0
                i=0
                while(b1>0):
                    m= b1%10
                    sums=sums+m*l1[i]
                    primenum(sums)
                    b1=b1//10
                    i=i+1
                #primenum(b)            
                        
    c=''            
                
print(a)
#print(d)
